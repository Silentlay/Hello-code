// // Виды методов
// // Вид 1
// void Method1 ()
// {
//     Console.WriteLine("Автор ..."); // Console.WriteLine(" ") - что-то показывает(выводит) на экран  
// }
// Method1();// как вызываются эти методы, мы должны написать имя метода в данном случае - Method1 и далее постовить скобки - (), если вызывать метод без скобок то в терминале будет ошибка


// Следущая группа методов, группа 2
// Вид 2 ( это методы которые ни чего не возращают, но в то же время могут принимать какие-то аргументы)
// void Method2(string msg)// где void - ключевое слово, Method2 - идентификатор (имя), (string msg) - какое-то колличество аргументов
// {
//     Console.WriteLine(msg);
// }
// Method2("Текст сообщения"); // для того чтобы вызвать нам подобный метод нам потребуется указать его идентификатор н-р Method2 и указывать какое-то сообление ("Текст сообщения")

// void Method21(string msg, int count)// и у нас есть меседж string msg и какой-то условный count, который будет передоваться в наш метод
// {
//     int i = 0;
//     while (i < count)
//     {
// Console.WriteLine(msg);
// i++; // тут идет увеличение счетчика на единичку - называется инкримент, уменьшение дикримент
//     }
// }
// Method21("Текст сообщения", 4);// таким способом может осуществляться вызов метода путем указания аргументов "текст" и сколько раз мы хотим увидеть это сообщение
// // чтобы выйти из зацикливания нажать CTRL + C


// 

// void Method21(string msg, int count)// и у нас есть меседж string msg и какой-то условный count, который будет передоваться в наш метод
// {
//     int i = 0;
//     while (i < count)
//     {
//         Console.WriteLine(msg);
//         i++; // тут идет увеличение счетчика на единичку - называется инкримент, уменьшение дикримент
//     }
// }
//Method21(msg: "Текст", 4);// можем явно указывать какому аргументу какое значение мы хотим присвоить через такую конструкцию
// Method21(count: 4, msg: "новый текст");

// Методы которые что-то возвращают, но ни что не принимают
// Вид 3
// Если метод что-то возвращает мы в обязательном порядке должны будем указать тип данных, значения которого мы ожидаем
// int Method3()// аргументы он ни какие не принимает и соответственно обязательно применение оператора return
// {
//     return DateTime.Now.Year; // для красоты выведем текущий текущий год
// }

// int year = Method3();
// Console.WriteLine(year);

// Вид 4 - это методы которые принимают и что-то возвращают

// string Method4(int count, string text)// возвращать будем строку (string), будем передавать string (строку) count(число) раз
// {
//     int i = 0; //для начала возьмем цикл
//     string result = String.Empty; // дальше нам потребуется переменная в которую мы будем класть конечный результат (result) этим значением будет пустая строка (String.Empty)
    
//     while (i < count)
//     {
//     result = result + text;
//     i++;
//     }
//     return result;
// }
// string res = Method4(10, "z");
// Console.WriteLine(res);// ожидает увидеть текст - asdf 10 раз

// Цикл for(цикл со счетчиком) (собирает все в одном месте)
/*Синтаксически он собирает все в кучу: инициализируется счетчик, проверяет условие....он собирает это все в одном месте

for(int i = 0; i <10; i++)
{
    Console.WriteLine(i)
}
*/

// string Method4(int count, string text)// возвращать будем строку (string), будем передавать string (строку) count(число) раз
// {
//      //для начала возьмем цикл
//     string result = String.Empty; // дальше нам потребуется переменная в которую мы будем класть конечный результат (result) этим значением будет пустая строка (String.Empty)
//     for(int i = 0; i < count; i++)// int i = 0; - инициализация счетчика, далее проверка условия - while (i < count)
//         {
//             result = result + text;
//             }
//     return result;
// }
// string res = Method4(10, "z");
// Console.WriteLine(res);// ожидает увидеть текст - asdf 10 раз

//Цикл использовать внутри цикла, посмотрим каким образом можно использовать данную возможность

/*
for(int i = 0; i < 10; i++)
{
    for(int j = 0; j < 10; j++)
    {
        Console.WriteLine(i*j)
    }
    Console.WriteLine()
}
*/

// классическое использование данной задачи мы будем использовать вывод таблицы умножения на экран

for(int i = 2; i <= 10; i++)
{
    for(int j = 2; j <= 10; j++)
    {
        Console.WriteLine($"{i} * {j} = {i*j}");
    }

    Console.WriteLine();
}


